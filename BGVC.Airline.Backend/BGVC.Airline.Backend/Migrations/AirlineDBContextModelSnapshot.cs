// <auto-generated />
using System;
using BGVC.Airline.Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BGVC.Airline.Backend.Migrations
{
    [DbContext(typeof(AirlineDBContext))]
    partial class AirlineDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("ElevationFeet");

                    b.Property<int?>("LatitudeDegrees");

                    b.Property<int?>("LongitudeDegrees");

                    b.Property<int>("MunicipalityId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("TypeId");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LAX",
                            MunicipalityId = 1,
                            Name = "Los Angeles International Airport",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 2,
                            Code = "BEG",
                            MunicipalityId = 2,
                            Name = "Belgrade Nikola Tesla Airport",
                            TypeId = 7
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.AirportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AirportTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "heliport"
                        },
                        new
                        {
                            Id = 2,
                            Name = "small_airport"
                        },
                        new
                        {
                            Id = 3,
                            Name = "closed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "seaplane_base"
                        },
                        new
                        {
                            Id = 5,
                            Name = "balloonport"
                        },
                        new
                        {
                            Id = 6,
                            Name = "medium_airport"
                        },
                        new
                        {
                            Id = 7,
                            Name = "large_airport"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Iso3")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("NumCode")
                        .HasMaxLength(3);

                    b.Property<string>("PhoneCode")
                        .HasMaxLength(4);

                    b.Property<string>("PrintableName")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Iso = "RS",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = 2,
                            Iso = "US",
                            Name = "United States"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.IsoRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<int>("CountryId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("IsoRegions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "US-NJ",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 2,
                            Code = "RS-05",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "RS-16",
                            CountryId = 1
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsoRegionId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IsoRegionId");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsoRegionId = 1,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 2,
                            IsoRegionId = 3,
                            Name = "Belgrade"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Airport", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Municipality", "Municipality")
                        .WithMany("Airports")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BGVC.Airline.Backend.Models.AirportType", "AirportType")
                        .WithMany("Airports")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.IsoRegion", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Country", "Country")
                        .WithMany("IsoRegions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Municipality", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.IsoRegion", "IsoRegion")
                        .WithMany("Municipalities")
                        .HasForeignKey("IsoRegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
