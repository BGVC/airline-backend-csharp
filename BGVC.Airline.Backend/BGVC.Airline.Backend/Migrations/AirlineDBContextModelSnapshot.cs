// <auto-generated />
using System;
using BGVC.Airline.Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BGVC.Airline.Backend.Migrations
{
    [DbContext(typeof(AirlineDBContext))]
    partial class AirlineDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BGVC.Airline.Backend.Models.AirlineCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("AirlineCompany");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Jat Airways"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "US AirTrans"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.AirplaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("Manufacturer", "Model")
                        .IsUnique();

                    b.ToTable("AirplaneTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Boeing",
                            Model = "737"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Airbus",
                            Model = "A330"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ElevationFeet")
                        .HasColumnType("int");

                    b.Property<int?>("LatitudeDegrees")
                        .HasColumnType("int");

                    b.Property<int?>("LongitudeDegrees")
                        .HasColumnType("int");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("TypeId");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LAX",
                            MunicipalityId = 1,
                            Name = "Los Angeles International Airport",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 2,
                            Code = "BEG",
                            MunicipalityId = 2,
                            Name = "Belgrade Nikola Tesla Airport",
                            TypeId = 7
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.AirportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AirportTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "heliport"
                        },
                        new
                        {
                            Id = 2,
                            Name = "small_airport"
                        },
                        new
                        {
                            Id = 3,
                            Name = "closed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "seaplane_base"
                        },
                        new
                        {
                            Id = 5,
                            Name = "balloonport"
                        },
                        new
                        {
                            Id = 6,
                            Name = "medium_airport"
                        },
                        new
                        {
                            Id = 7,
                            Name = "large_airport"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Iso3")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("NumCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("PrintableName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Iso = "RS",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = 2,
                            Iso = "US",
                            Name = "United States"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirplaneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirplaneTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureAirportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationAirportId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneTypeId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartureAirportId");

                    b.HasIndex("DestinationAirportId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirplaneNumber = "No1",
                            AirplaneTypeId = 1,
                            ArrivalTime = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 1,
                            DepartureAirportId = 1,
                            DepartureTime = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DestinationAirportId = 2,
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            AirplaneNumber = "No2",
                            AirplaneTypeId = 2,
                            ArrivalTime = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 2,
                            DepartureAirportId = 2,
                            DepartureTime = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DestinationAirportId = 1,
                            Price = 150m
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.FlightExtraOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("FlightExtraOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A sandwich and a beverage",
                            Name = "Basic",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            Description = "A premium meal",
                            Name = "Silver",
                            Price = 15m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Three course meal at the airplane lounge",
                            Name = "Gold",
                            Price = 50m
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.IsoRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("IsoRegions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "US-NJ",
                            CountryId = 2
                        },
                        new
                        {
                            Id = 2,
                            Code = "RS-05",
                            CountryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "RS-16",
                            CountryId = 1
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.LuggageOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("LuggageOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cabin luggage up to 8 kg",
                            Name = "Basic",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            Description = "One bag up to 20kg + cabin luggage up to 8 kg",
                            Name = "Silver",
                            Price = 20m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Two bags up to 20kg each + cabin luggage up to 8 kg",
                            Name = "Gold",
                            Price = 32m
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsoRegionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IsoRegionId");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsoRegionId = 1,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 2,
                            IsoRegionId = 3,
                            Name = "Belgrade"
                        });
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassportId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PassportId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CitizenshipCountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryOfIssueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CitizenshipCountryId");

                    b.HasIndex("CountryOfIssueId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Passports");
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightExtraOptionId")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("LuggageOptionId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .HasMaxLength(6);

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightExtraOptionId");

                    b.HasIndex("FlightId");

                    b.HasIndex("LuggageOptionId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PassengerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.AirlineCompany", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Airport", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Municipality", "Municipality")
                        .WithMany("Airports")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.AirportType", "AirportType")
                        .WithMany("Airports")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Flight", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.AirplaneType", "AirplaneType")
                        .WithMany()
                        .HasForeignKey("AirplaneTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.AirlineCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.Airport", "DestinationAirport")
                        .WithMany()
                        .HasForeignKey("DestinationAirportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.IsoRegion", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Country", "Country")
                        .WithMany("IsoRegions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Municipality", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.IsoRegion", "IsoRegion")
                        .WithMany("Municipalities")
                        .HasForeignKey("IsoRegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Passenger", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Passport", "Passport")
                        .WithMany()
                        .HasForeignKey("PassportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Passport", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.Country", "CitizenshipCountry")
                        .WithMany()
                        .HasForeignKey("CitizenshipCountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.Country", "CountryOfIssue")
                        .WithMany()
                        .HasForeignKey("CountryOfIssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BGVC.Airline.Backend.Models.Reservation", b =>
                {
                    b.HasOne("BGVC.Airline.Backend.Models.FlightExtraOption", "FlightExtraOption")
                        .WithMany()
                        .HasForeignKey("FlightExtraOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.LuggageOption", "LuggageOption")
                        .WithMany()
                        .HasForeignKey("LuggageOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BGVC.Airline.Backend.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
